# docker-compose.yml

services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: analytical-dashboard
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - backend
  
  kafka-db-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m kafka.kafka_db_consumer
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  kafka-external-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m kafka.kafka_external_consumer
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  kafka-failed-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m kafka.kafka_failed_consumer
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy


  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - backend



  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend

  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - backend
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
  
  kafka-producer:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m kafka.kafka_producer
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  pulsar:
    image: apachepulsar/pulsar:3.2.0
    container_name: pulsar
    command: ["bash", "/pulsar/start-pulsar.sh"]
    ports:
      - "6650:6650"    
      - "8080:8080"
    volumes:
      - pulsar_data:/pulsar/data
      - ./pulsar_lib/validate.py:/pulsar/validate.py
      - ./init-pulsar.sh:/pulsar/init-pulsar.sh
      - ./start-pulsar.sh:/pulsar/start-pulsar.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - backend
  
  pulsar-kafka-forwarder:
    build:
      context: .
      dockerfile: Dockerfile 
    container_name: forwarder
    command: python /app/pulsar_to_kafka.py
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      pulsar:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: always

networks:
  backend:
    driver: bridge

volumes:
  pulsar_data: