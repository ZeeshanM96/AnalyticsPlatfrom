name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Code Quality Check (black + flake8)
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black flake8

    - name: Run Black
      run: |
        black --check backend/

    - name: Run flake8
      run: |
        flake8 backend/

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Run Prettier (check only)
      run: |
        npx prettier frontend/ --check

    - name: Run ESLint
      run: |
        npx eslint frontend/ --ext .js

    - name: Run Stylelint
      run: |
        npx stylelint "frontend/**/*.css"

  test:
    name: Run Tests (pytest)
    runs-on: ubuntu-latest
    needs: lint   

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run pytest
      env:
        PYTHONPATH: .
      run: |
        pytest

  deploy:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/analytical-dashboard:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/analytical-dashboard:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max